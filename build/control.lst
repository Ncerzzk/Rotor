ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"control.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_i2f
  16              		.global	__aeabi_fdiv
  17              		.global	__aeabi_fmul
  18              		.section	.text.Get_Voltage,"ax",%progbits
  19              		.align	1
  20              		.global	Get_Voltage
  21              		.arch armv7-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	Get_Voltage:
  28              	.LVL0:
  29              	.LFB68:
  30              		.file 1 "Src/control.c"
   1:Src/control.c **** #include "control.h"
   2:Src/control.c **** #include "tim.h"
   3:Src/control.c **** #include "icm20600.h"
   4:Src/control.c **** #include "easy_angle.h"
   5:Src/control.c **** #include "uart_ext.h"
   6:Src/control.c **** #include "math.h"
   7:Src/control.c **** #include "pid.h"
   8:Src/control.c **** #include "adc.h"
   9:Src/control.c **** 
  10:Src/control.c **** float Pitch_Stable=90.0f;
  11:Src/control.c **** float Roll_Stable=90.0f;
  12:Src/control.c **** 
  13:Src/control.c **** #define L_Servor_Polarity 1
  14:Src/control.c **** #define R_Servor_Poloarity -1
  15:Src/control.c **** 
  16:Src/control.c **** #define Servor_Angle_Limit 45.0f  // 定义舵机单边最大运动角度
  17:Src/control.c **** 
  18:Src/control.c **** int L_Servor_Middle=1400;
  19:Src/control.c **** int R_Servor_Middle=1650;
  20:Src/control.c **** 
  21:Src/control.c **** int Servor_Width_Limit=0; // 舵机脉宽限制 
  22:Src/control.c **** 
  23:Src/control.c **** #define MIN(a,b) a<b?a:b
  24:Src/control.c **** 
  25:Src/control.c **** int16_t Thrust_Value;
  26:Src/control.c **** 
  27:Src/control.c **** // pitch 往前低头为正 
  28:Src/control.c **** // Roll 右倾为正
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 2


  29:Src/control.c **** float Pitch,Roll;   
  30:Src/control.c **** 
  31:Src/control.c **** PID_S Roll_PID={1.5,0,0,0,0,0,0,0.005f};
  32:Src/control.c **** PID_S Pitch_PID={-2,0,-0.0005f,0,0,0,0,0.005f};
  33:Src/control.c **** PID_S Theta_PID={0,0,0};
  34:Src/control.c **** 
  35:Src/control.c **** PID_S Pitch_Angle_Speed_PID={0.5,0,0,0,0,0,0,0.005f};
  36:Src/control.c **** PID_S Roll_Angle_Speed_PID={0.75f,0,0.001f,0,0,0,0,0.005f};
  37:Src/control.c **** 
  38:Src/control.c **** PID_S Theta_Angle_Speed_PID={-1,0,-0.005f,0,0,0,0,0.005f};
  39:Src/control.c **** 
  40:Src/control.c **** enum Modes Aircraft_Mode=Mode_Wait;
  41:Src/control.c **** 
  42:Src/control.c **** uint8_t MS_5_Flag=0; // 5ms flag
  43:Src/control.c **** 
  44:Src/control.c **** float BAT_Voltage=0;
  45:Src/control.c **** 
  46:Src/control.c **** float Get_Voltage(uint16_t R1,uint16_t R2){
  31              		.loc 1 46 43 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 46 43 is_stmt 0 view .LVU1
  36 0000 70B5     		push	{r4, r5, r6, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43 0002 0646     		mov	r6, r0
  44 0004 0C46     		mov	r4, r1
  47:Src/control.c ****   uint16_t adc_value=0;
  45              		.loc 1 47 3 is_stmt 1 view .LVU2
  46              	.LVL1:
  48:Src/control.c ****   float voltage=0;
  47              		.loc 1 48 3 view .LVU3
  49:Src/control.c ****   HAL_ADC_Start(&hadc1);
  48              		.loc 1 49 3 view .LVU4
  49 0006 134D     		ldr	r5, .L3
  50 0008 2846     		mov	r0, r5
  51              	.LVL2:
  52              		.loc 1 49 3 is_stmt 0 view .LVU5
  53 000a FFF7FEFF 		bl	HAL_ADC_Start
  54              	.LVL3:
  50:Src/control.c ****   HAL_ADC_PollForConversion(&hadc1,10);
  55              		.loc 1 50 3 is_stmt 1 view .LVU6
  56 000e 0A21     		movs	r1, #10
  57 0010 2846     		mov	r0, r5
  58 0012 FFF7FEFF 		bl	HAL_ADC_PollForConversion
  59              	.LVL4:
  51:Src/control.c ****   adc_value=HAL_ADC_GetValue(&hadc1);
  60              		.loc 1 51 3 view .LVU7
  61              		.loc 1 51 13 is_stmt 0 view .LVU8
  62 0016 2846     		mov	r0, r5
  63 0018 FFF7FEFF 		bl	HAL_ADC_GetValue
  64              	.LVL5:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 3


  65 001c 0546     		mov	r5, r0
  66              	.LVL6:
  52:Src/control.c ****   
  53:Src/control.c ****   voltage=(float)(R1+R2)/R2*adc_value/4096.0f*3300;
  67              		.loc 1 53 3 is_stmt 1 view .LVU9
  68              		.loc 1 53 11 is_stmt 0 view .LVU10
  69 001e 3019     		adds	r0, r6, r4
  70 0020 FFF7FEFF 		bl	__aeabi_i2f
  71              	.LVL7:
  72 0024 0646     		mov	r6, r0
  73              		.loc 1 53 25 view .LVU11
  74 0026 2046     		mov	r0, r4
  75 0028 FFF7FEFF 		bl	__aeabi_i2f
  76              	.LVL8:
  77 002c 0146     		mov	r1, r0
  78 002e 3046     		mov	r0, r6
  79 0030 FFF7FEFF 		bl	__aeabi_fdiv
  80              	.LVL9:
  81 0034 0446     		mov	r4, r0
  82              		.loc 1 53 28 view .LVU12
  83 0036 A8B2     		uxth	r0, r5
  84 0038 FFF7FEFF 		bl	__aeabi_i2f
  85              	.LVL10:
  86 003c 2146     		mov	r1, r4
  87 003e FFF7FEFF 		bl	__aeabi_fmul
  88              	.LVL11:
  89              		.loc 1 53 38 view .LVU13
  90 0042 4FF06651 		mov	r1, #964689920
  91 0046 FFF7FEFF 		bl	__aeabi_fmul
  92              	.LVL12:
  93              		.loc 1 53 10 view .LVU14
  94 004a 0349     		ldr	r1, .L3+4
  95 004c FFF7FEFF 		bl	__aeabi_fmul
  96              	.LVL13:
  54:Src/control.c ****   return voltage;
  97              		.loc 1 54 3 is_stmt 1 view .LVU15
  55:Src/control.c **** }
  98              		.loc 1 55 1 is_stmt 0 view .LVU16
  99 0050 70BD     		pop	{r4, r5, r6, pc}
 100              	.LVL14:
 101              	.L4:
 102              		.loc 1 55 1 view .LVU17
 103 0052 00BF     		.align	2
 104              	.L3:
 105 0054 00000000 		.word	hadc1
 106 0058 00404E45 		.word	1162756096
 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.Servors_Init,"ax",%progbits
 111              		.align	1
 112              		.global	Servors_Init
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu softvfp
 118              	Servors_Init:
 119              	.LFB69:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 4


  56:Src/control.c **** 
  57:Src/control.c **** void Servors_Init(){
 120              		.loc 1 57 20 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
  58:Src/control.c ****   // 因为两个舵机的安装位置都不是1500处位于中位，因此需要做一些限制，
  59:Src/control.c ****   // 需要注意的，这里取的仅是一个相对值，如Servor_Angle_Limit为45，Servor_Widt
  60:Src/control.c ****   // 并不是说当脉宽为中值+350时，舵机就转动45°，仅仅是一个相对的量
  61:Src/control.c ****   int L_Min=0;
 125              		.loc 1 61 3 view .LVU19
 126              	.LVL15:
  62:Src/control.c ****   int R_Min=0;
 127              		.loc 1 62 3 view .LVU20
  63:Src/control.c ****   L_Min=MIN(L_Servor_Middle-1000,2000-L_Servor_Middle);
 128              		.loc 1 63 3 view .LVU21
 129              		.loc 1 63 9 is_stmt 0 view .LVU22
 130 0000 0C4B     		ldr	r3, .L8
 131 0002 1A68     		ldr	r2, [r3]
 132 0004 A2F2E731 		subw	r1, r2, #999
 133 0008 C2F5FA63 		rsb	r3, r2, #2000
 134 000c 9942     		cmp	r1, r3
 135 000e 01DC     		bgt	.L6
 136              		.loc 1 63 9 discriminator 1 view .LVU23
 137 0010 A2F57A73 		sub	r3, r2, #1000
 138              	.L6:
 139              	.LVL16:
  64:Src/control.c ****   R_Min=MIN(R_Servor_Middle-1000,2000-R_Servor_Middle);
 140              		.loc 1 64 3 is_stmt 1 discriminator 4 view .LVU24
 141              		.loc 1 64 9 is_stmt 0 discriminator 4 view .LVU25
 142 0014 084A     		ldr	r2, .L8+4
 143 0016 1168     		ldr	r1, [r2]
 144 0018 A1F2E730 		subw	r0, r1, #999
 145 001c C1F5FA62 		rsb	r2, r1, #2000
 146 0020 9042     		cmp	r0, r2
 147 0022 01DC     		bgt	.L7
 148              		.loc 1 64 9 discriminator 1 view .LVU26
 149 0024 A1F57A72 		sub	r2, r1, #1000
 150              	.L7:
 151              	.LVL17:
  65:Src/control.c ****   
  66:Src/control.c ****   Servor_Width_Limit=MIN(L_Min,R_Min);
 152              		.loc 1 66 3 is_stmt 1 discriminator 4 view .LVU27
 153              		.loc 1 66 22 is_stmt 0 discriminator 4 view .LVU28
 154 0028 9342     		cmp	r3, r2
 155 002a A8BF     		it	ge
 156 002c 1346     		movge	r3, r2
 157              	.LVL18:
 158              		.loc 1 66 21 discriminator 4 view .LVU29
 159 002e 034A     		ldr	r2, .L8+8
 160              	.LVL19:
 161              		.loc 1 66 21 discriminator 4 view .LVU30
 162 0030 1360     		str	r3, [r2]
  67:Src/control.c **** }
 163              		.loc 1 67 1 discriminator 4 view .LVU31
 164 0032 7047     		bx	lr
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 5


 165              	.L9:
 166              		.align	2
 167              	.L8:
 168 0034 00000000 		.word	.LANCHOR0
 169 0038 00000000 		.word	.LANCHOR1
 170 003c 00000000 		.word	.LANCHOR2
 171              		.cfi_endproc
 172              	.LFE69:
 174              		.section	.text.ESC_Init,"ax",%progbits
 175              		.align	1
 176              		.global	ESC_Init
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	ESC_Init:
 183              	.LFB70:
  68:Src/control.c **** 
  69:Src/control.c **** void ESC_Init(){
 184              		.loc 1 69 16 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 38B5     		push	{r3, r4, r5, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 3, -16
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 5, -8
 194              		.cfi_offset 14, -4
  70:Src/control.c ****   TIM3->CCR4=Caculate_Cnt(&htim3,64,1000);
 195              		.loc 1 70 3 view .LVU33
 196              		.loc 1 70 14 is_stmt 0 view .LVU34
 197 0002 084D     		ldr	r5, .L12
 198 0004 4FF47A72 		mov	r2, #1000
 199 0008 4021     		movs	r1, #64
 200 000a 2846     		mov	r0, r5
 201 000c FFF7FEFF 		bl	Caculate_Cnt
 202              	.LVL20:
 203              		.loc 1 70 13 view .LVU35
 204 0010 054C     		ldr	r4, .L12+4
 205 0012 2064     		str	r0, [r4, #64]
  71:Src/control.c ****   TIM3->CCR3=Caculate_Cnt(&htim3,64,1000);
 206              		.loc 1 71 3 is_stmt 1 view .LVU36
 207              		.loc 1 71 14 is_stmt 0 view .LVU37
 208 0014 4FF47A72 		mov	r2, #1000
 209 0018 4021     		movs	r1, #64
 210 001a 2846     		mov	r0, r5
 211 001c FFF7FEFF 		bl	Caculate_Cnt
 212              	.LVL21:
 213              		.loc 1 71 13 view .LVU38
 214 0020 E063     		str	r0, [r4, #60]
  72:Src/control.c **** }
 215              		.loc 1 72 1 view .LVU39
 216 0022 38BD     		pop	{r3, r4, r5, pc}
 217              	.L13:
 218              		.align	2
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 6


 219              	.L12:
 220 0024 00000000 		.word	htim3
 221 0028 00040040 		.word	1073742848
 222              		.cfi_endproc
 223              	.LFE70:
 225              		.global	__aeabi_fcmpgt
 226              		.global	__aeabi_fcmplt
 227              		.global	__aeabi_f2iz
 228              		.section	.text.Set_Servor,"ax",%progbits
 229              		.align	1
 230              		.global	Set_Servor
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	Set_Servor:
 237              	.LVL22:
 238              	.LFB71:
  73:Src/control.c **** 
  74:Src/control.c **** void Set_Servor(enum Servors Servor,float theta){
 239              		.loc 1 74 49 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		.loc 1 74 49 is_stmt 0 view .LVU41
 244 0000 38B5     		push	{r3, r4, r5, lr}
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 3, -16
 248              		.cfi_offset 4, -12
 249              		.cfi_offset 5, -8
 250              		.cfi_offset 14, -4
 251 0002 0546     		mov	r5, r0
 252 0004 0C46     		mov	r4, r1
  75:Src/control.c ****   // theta 取值 -45 到 45 因为舵机的运动范围并没有到180°
  76:Src/control.c ****   // theat 为正值，舵机向前
  77:Src/control.c ****   if(theta>Servor_Angle_Limit){
 253              		.loc 1 77 3 is_stmt 1 view .LVU42
 254              		.loc 1 77 5 is_stmt 0 view .LVU43
 255 0006 1A49     		ldr	r1, .L22
 256              	.LVL23:
 257              		.loc 1 77 5 view .LVU44
 258 0008 2046     		mov	r0, r4
 259              	.LVL24:
 260              		.loc 1 77 5 view .LVU45
 261 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 262              	.LVL25:
 263 000e 30B9     		cbnz	r0, .L19
  78:Src/control.c ****     theta=Servor_Angle_Limit;
  79:Src/control.c ****   }else if(theta<-Servor_Angle_Limit){
 264              		.loc 1 79 9 is_stmt 1 view .LVU46
 265              		.loc 1 79 11 is_stmt 0 view .LVU47
 266 0010 1849     		ldr	r1, .L22+4
 267 0012 2046     		mov	r0, r4
 268 0014 FFF7FEFF 		bl	__aeabi_fcmplt
 269              	.LVL26:
 270 0018 10B1     		cbz	r0, .L15
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 7


  80:Src/control.c ****     theta=-Servor_Angle_Limit;
 271              		.loc 1 80 10 view .LVU48
 272 001a 164C     		ldr	r4, .L22+4
 273              	.LVL27:
 274              		.loc 1 80 10 view .LVU49
 275 001c 00E0     		b	.L15
 276              	.LVL28:
 277              	.L19:
  78:Src/control.c ****     theta=Servor_Angle_Limit;
 278              		.loc 1 78 10 view .LVU50
 279 001e 144C     		ldr	r4, .L22
 280              	.LVL29:
 281              	.L15:
  81:Src/control.c ****   }
  82:Src/control.c ****   int sub=(int)(theta/Servor_Angle_Limit*Servor_Width_Limit);
 282              		.loc 1 82 3 is_stmt 1 view .LVU51
 283              		.loc 1 82 22 is_stmt 0 view .LVU52
 284 0020 1349     		ldr	r1, .L22
 285 0022 2046     		mov	r0, r4
 286 0024 FFF7FEFF 		bl	__aeabi_fdiv
 287              	.LVL30:
 288 0028 0446     		mov	r4, r0
 289              	.LVL31:
 290              		.loc 1 82 41 view .LVU53
 291 002a 134B     		ldr	r3, .L22+8
 292 002c 1868     		ldr	r0, [r3]
 293 002e FFF7FEFF 		bl	__aeabi_i2f
 294              	.LVL32:
 295 0032 2146     		mov	r1, r4
 296 0034 FFF7FEFF 		bl	__aeabi_fmul
 297              	.LVL33:
 298              		.loc 1 82 7 view .LVU54
 299 0038 FFF7FEFF 		bl	__aeabi_f2iz
 300              	.LVL34:
  83:Src/control.c ****   switch(Servor){
 301              		.loc 1 83 3 is_stmt 1 view .LVU55
 302 003c 15B1     		cbz	r5, .L16
 303 003e 012D     		cmp	r5, #1
 304 0040 0BD0     		beq	.L17
 305              	.LVL35:
 306              	.L14:
  84:Src/control.c ****   case L_Servor:
  85:Src/control.c ****     TIM2->CCR2=Caculate_Cnt(&htim2,64,L_Servor_Middle+sub*L_Servor_Polarity);
  86:Src/control.c ****     break;
  87:Src/control.c ****   case R_Servor:
  88:Src/control.c ****     TIM2->CCR1=Caculate_Cnt(&htim2,64,R_Servor_Middle+sub*R_Servor_Poloarity);
  89:Src/control.c ****     break;
  90:Src/control.c ****   }
  91:Src/control.c **** }
 307              		.loc 1 91 1 is_stmt 0 view .LVU56
 308 0042 38BD     		pop	{r3, r4, r5, pc}
 309              	.LVL36:
 310              	.L16:
  85:Src/control.c ****     break;
 311              		.loc 1 85 5 is_stmt 1 view .LVU57
  85:Src/control.c ****     break;
 312              		.loc 1 85 16 is_stmt 0 view .LVU58
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 8


 313 0044 0D4B     		ldr	r3, .L22+12
 314 0046 1A68     		ldr	r2, [r3]
 315 0048 0244     		add	r2, r2, r0
 316 004a 4021     		movs	r1, #64
 317 004c 0C48     		ldr	r0, .L22+16
 318              	.LVL37:
  85:Src/control.c ****     break;
 319              		.loc 1 85 16 view .LVU59
 320 004e FFF7FEFF 		bl	Caculate_Cnt
 321              	.LVL38:
  85:Src/control.c ****     break;
 322              		.loc 1 85 15 view .LVU60
 323 0052 4FF08043 		mov	r3, #1073741824
 324 0056 9863     		str	r0, [r3, #56]
  86:Src/control.c ****   case R_Servor:
 325              		.loc 1 86 5 is_stmt 1 view .LVU61
 326 0058 F3E7     		b	.L14
 327              	.LVL39:
 328              	.L17:
  88:Src/control.c ****     break;
 329              		.loc 1 88 5 view .LVU62
  88:Src/control.c ****     break;
 330              		.loc 1 88 16 is_stmt 0 view .LVU63
 331 005a 0A4B     		ldr	r3, .L22+20
 332 005c 1A68     		ldr	r2, [r3]
 333 005e 121A     		subs	r2, r2, r0
 334 0060 4021     		movs	r1, #64
 335 0062 0748     		ldr	r0, .L22+16
 336              	.LVL40:
  88:Src/control.c ****     break;
 337              		.loc 1 88 16 view .LVU64
 338 0064 FFF7FEFF 		bl	Caculate_Cnt
 339              	.LVL41:
  88:Src/control.c ****     break;
 340              		.loc 1 88 15 view .LVU65
 341 0068 4FF08043 		mov	r3, #1073741824
 342 006c 5863     		str	r0, [r3, #52]
  89:Src/control.c ****   }
 343              		.loc 1 89 5 is_stmt 1 view .LVU66
 344              		.loc 1 91 1 is_stmt 0 view .LVU67
 345 006e E8E7     		b	.L14
 346              	.L23:
 347              		.align	2
 348              	.L22:
 349 0070 00003442 		.word	1110704128
 350 0074 000034C2 		.word	-1036779520
 351 0078 00000000 		.word	.LANCHOR2
 352 007c 00000000 		.word	.LANCHOR0
 353 0080 00000000 		.word	htim2
 354 0084 00000000 		.word	.LANCHOR1
 355              		.cfi_endproc
 356              	.LFE71:
 358              		.global	__aeabi_fadd
 359              		.section	.text.Set_ESC,"ax",%progbits
 360              		.align	1
 361              		.global	Set_ESC
 362              		.syntax unified
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 9


 363              		.thumb
 364              		.thumb_func
 365              		.fpu softvfp
 367              	Set_ESC:
 368              	.LVL42:
 369              	.LFB72:
  92:Src/control.c **** 
  93:Src/control.c **** void Set_ESC(enum ESCs ESC,float duty){
 370              		.loc 1 93 39 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 93 39 is_stmt 0 view .LVU69
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              	.LCFI3:
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 0546     		mov	r5, r0
 383 0004 0C46     		mov	r4, r1
  94:Src/control.c ****   if(duty>95){
 384              		.loc 1 94 3 is_stmt 1 view .LVU70
 385              		.loc 1 94 5 is_stmt 0 view .LVU71
 386 0006 1949     		ldr	r1, .L32
 387              	.LVL43:
 388              		.loc 1 94 5 view .LVU72
 389 0008 2046     		mov	r0, r4
 390              	.LVL44:
 391              		.loc 1 94 5 view .LVU73
 392 000a FFF7FEFF 		bl	__aeabi_fcmpgt
 393              	.LVL45:
 394 000e 30B9     		cbnz	r0, .L29
  95:Src/control.c ****     duty=95;
  96:Src/control.c ****   }else if(duty<0){
 395              		.loc 1 96 9 is_stmt 1 view .LVU74
 396              		.loc 1 96 11 is_stmt 0 view .LVU75
 397 0010 0021     		movs	r1, #0
 398 0012 2046     		mov	r0, r4
 399 0014 FFF7FEFF 		bl	__aeabi_fcmplt
 400              	.LVL46:
 401 0018 10B1     		cbz	r0, .L25
  97:Src/control.c ****     duty=0;
 402              		.loc 1 97 9 view .LVU76
 403 001a 0024     		movs	r4, #0
 404              	.LVL47:
 405              		.loc 1 97 9 view .LVU77
 406 001c 00E0     		b	.L25
 407              	.LVL48:
 408              	.L29:
  95:Src/control.c ****     duty=95;
 409              		.loc 1 95 9 view .LVU78
 410 001e 134C     		ldr	r4, .L32
 411              	.LVL49:
 412              	.L25:
  98:Src/control.c ****   }
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 10


  99:Src/control.c ****   switch(ESC){
 413              		.loc 1 99 3 is_stmt 1 view .LVU79
 414 0020 15B1     		cbz	r5, .L26
 415 0022 012D     		cmp	r5, #1
 416 0024 11D0     		beq	.L27
 417              	.L24:
 100:Src/control.c ****   case L_ESC:
 101:Src/control.c ****     TIM3->CCR4=Caculate_Cnt(&htim3,64,(int)(1000+duty*10));
 102:Src/control.c ****     break;
 103:Src/control.c ****   case R_ESC:
 104:Src/control.c ****     TIM3->CCR3=Caculate_Cnt(&htim3,64,(int)(1000+duty*10));
 105:Src/control.c ****     break;
 106:Src/control.c ****   }
 107:Src/control.c **** }
 418              		.loc 1 107 1 is_stmt 0 view .LVU80
 419 0026 38BD     		pop	{r3, r4, r5, pc}
 420              	.LVL50:
 421              	.L26:
 101:Src/control.c ****     break;
 422              		.loc 1 101 5 is_stmt 1 view .LVU81
 101:Src/control.c ****     break;
 423              		.loc 1 101 54 is_stmt 0 view .LVU82
 424 0028 1149     		ldr	r1, .L32+4
 425 002a 2046     		mov	r0, r4
 426 002c FFF7FEFF 		bl	__aeabi_fmul
 427              	.LVL51:
 101:Src/control.c ****     break;
 428              		.loc 1 101 49 view .LVU83
 429 0030 1049     		ldr	r1, .L32+8
 430 0032 FFF7FEFF 		bl	__aeabi_fadd
 431              	.LVL52:
 101:Src/control.c ****     break;
 432              		.loc 1 101 16 view .LVU84
 433 0036 FFF7FEFF 		bl	__aeabi_f2iz
 434              	.LVL53:
 435 003a 0246     		mov	r2, r0
 436 003c 4021     		movs	r1, #64
 437 003e 0E48     		ldr	r0, .L32+12
 438 0040 FFF7FEFF 		bl	Caculate_Cnt
 439              	.LVL54:
 101:Src/control.c ****     break;
 440              		.loc 1 101 15 view .LVU85
 441 0044 0D4B     		ldr	r3, .L32+16
 442 0046 1864     		str	r0, [r3, #64]
 102:Src/control.c ****   case R_ESC:
 443              		.loc 1 102 5 is_stmt 1 view .LVU86
 444 0048 EDE7     		b	.L24
 445              	.L27:
 104:Src/control.c ****     break;
 446              		.loc 1 104 5 view .LVU87
 104:Src/control.c ****     break;
 447              		.loc 1 104 54 is_stmt 0 view .LVU88
 448 004a 0949     		ldr	r1, .L32+4
 449 004c 2046     		mov	r0, r4
 450 004e FFF7FEFF 		bl	__aeabi_fmul
 451              	.LVL55:
 104:Src/control.c ****     break;
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 11


 452              		.loc 1 104 49 view .LVU89
 453 0052 0849     		ldr	r1, .L32+8
 454 0054 FFF7FEFF 		bl	__aeabi_fadd
 455              	.LVL56:
 104:Src/control.c ****     break;
 456              		.loc 1 104 16 view .LVU90
 457 0058 FFF7FEFF 		bl	__aeabi_f2iz
 458              	.LVL57:
 459 005c 0246     		mov	r2, r0
 460 005e 4021     		movs	r1, #64
 461 0060 0548     		ldr	r0, .L32+12
 462 0062 FFF7FEFF 		bl	Caculate_Cnt
 463              	.LVL58:
 104:Src/control.c ****     break;
 464              		.loc 1 104 15 view .LVU91
 465 0066 054B     		ldr	r3, .L32+16
 466 0068 D863     		str	r0, [r3, #60]
 105:Src/control.c ****   }
 467              		.loc 1 105 5 is_stmt 1 view .LVU92
 468              		.loc 1 107 1 is_stmt 0 view .LVU93
 469 006a DCE7     		b	.L24
 470              	.L33:
 471              		.align	2
 472              	.L32:
 473 006c 0000BE42 		.word	1119748096
 474 0070 00002041 		.word	1092616192
 475 0074 00007A44 		.word	1148846080
 476 0078 00000000 		.word	htim3
 477 007c 00040040 		.word	1073742848
 478              		.cfi_endproc
 479              	.LFE72:
 481              		.section	.text.Transform_N_to_Duty,"ax",%progbits
 482              		.align	1
 483              		.global	Transform_N_to_Duty
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu softvfp
 489              	Transform_N_to_Duty:
 490              	.LVL59:
 491              	.LFB73:
 108:Src/control.c **** 
 109:Src/control.c **** float Transform_N_to_Duty(float F){
 492              		.loc 1 109 35 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		.loc 1 109 35 is_stmt 0 view .LVU95
 497 0000 08B5     		push	{r3, lr}
 498              	.LCFI4:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 3, -8
 501              		.cfi_offset 14, -4
 110:Src/control.c ****   // 1N->40%
 111:Src/control.c ****   return F/1*40;
 502              		.loc 1 111 3 is_stmt 1 view .LVU96
 503              		.loc 1 111 13 is_stmt 0 view .LVU97
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 12


 504 0002 0249     		ldr	r1, .L36
 505 0004 FFF7FEFF 		bl	__aeabi_fmul
 506              	.LVL60:
 112:Src/control.c **** }
 507              		.loc 1 112 1 view .LVU98
 508 0008 08BD     		pop	{r3, pc}
 509              	.L37:
 510 000a 00BF     		.align	2
 511              	.L36:
 512 000c 00002042 		.word	1109393408
 513              		.cfi_endproc
 514              	.LFE73:
 516              		.section	.text.Transform_Rad_to_Dgree,"ax",%progbits
 517              		.align	1
 518              		.global	Transform_Rad_to_Dgree
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu softvfp
 524              	Transform_Rad_to_Dgree:
 525              	.LVL61:
 526              	.LFB74:
 113:Src/control.c **** float Transform_Rad_to_Dgree(float rad){
 527              		.loc 1 113 40 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		.loc 1 113 40 is_stmt 0 view .LVU100
 532 0000 08B5     		push	{r3, lr}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 114:Src/control.c ****   return rad/3.14f*360.0f;
 537              		.loc 1 114 3 is_stmt 1 view .LVU101
 538              		.loc 1 114 13 is_stmt 0 view .LVU102
 539 0002 0349     		ldr	r1, .L40
 540 0004 FFF7FEFF 		bl	__aeabi_fdiv
 541              	.LVL62:
 542              		.loc 1 114 19 view .LVU103
 543 0008 0249     		ldr	r1, .L40+4
 544 000a FFF7FEFF 		bl	__aeabi_fmul
 545              	.LVL63:
 115:Src/control.c **** }
 546              		.loc 1 115 1 view .LVU104
 547 000e 08BD     		pop	{r3, pc}
 548              	.L41:
 549              		.align	2
 550              	.L40:
 551 0010 C3F54840 		.word	1078523331
 552 0014 0000B443 		.word	1135869952
 553              		.cfi_endproc
 554              	.LFE74:
 556              		.global	__aeabi_fsub
 557              		.section	.text.Control_Loop,"ax",%progbits
 558              		.align	1
 559              		.global	Control_Loop
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 13


 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	Control_Loop:
 566              	.LFB75:
 116:Src/control.c **** 
 117:Src/control.c **** float Caculate_theta(float pitch,float roll);
 118:Src/control.c **** 
 119:Src/control.c **** #define PI 3.1415926f
 120:Src/control.c **** void Control_Loop(){
 567              		.loc 1 120 20 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 572              	.LCFI6:
 573              		.cfi_def_cfa_offset 24
 574              		.cfi_offset 3, -24
 575              		.cfi_offset 4, -20
 576              		.cfi_offset 5, -16
 577              		.cfi_offset 6, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 121:Src/control.c ****   static int16_t ac[3],gy[3];
 580              		.loc 1 121 3 view .LVU106
 122:Src/control.c ****   static float angle_speed[3],ac_angle[3],angle[3];
 581              		.loc 1 122 3 view .LVU107
 123:Src/control.c ****   float Roll_Out=0;
 582              		.loc 1 123 3 view .LVU108
 583              	.LVL64:
 124:Src/control.c ****   float Pitch_Out=0;
 584              		.loc 1 124 3 view .LVU109
 125:Src/control.c ****   float Pitch_Angle_Speed_Out,Roll_Angle_Speed_Out;
 585              		.loc 1 125 3 view .LVU110
 126:Src/control.c ****   float Theta_Angle_Speed_Out;
 586              		.loc 1 126 3 view .LVU111
 127:Src/control.c ****   float result[4]={0};
 587              		.loc 1 127 3 view .LVU112
 128:Src/control.c ****   static int loop_cnt=0;
 588              		.loc 1 128 3 view .LVU113
 129:Src/control.c **** 
 130:Src/control.c ****   float base_duty=0;
 589              		.loc 1 130 3 view .LVU114
 131:Src/control.c **** 
 132:Src/control.c ****   if(!MS_5_Flag){
 590              		.loc 1 132 3 view .LVU115
 591              		.loc 1 132 6 is_stmt 0 view .LVU116
 592 0002 674B     		ldr	r3, .L61
 593 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 594              		.loc 1 132 5 view .LVU117
 595 0006 03B9     		cbnz	r3, .L54
 596              	.LVL65:
 597              	.L42:
 133:Src/control.c ****     return ;
 134:Src/control.c ****   }
 135:Src/control.c ****   MPU_Read6500(&MPU9250,ac,gy);
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 14


 136:Src/control.c ****   Gyroraw_to_Angle_Speed(&MPU9250,gy,angle_speed);
 137:Src/control.c ****   get_angle(ac,angle_speed,angle,ac_angle);
 138:Src/control.c ****   
 139:Src/control.c ****   Pitch=angle[1];
 140:Src/control.c ****   Roll=angle[0];
 141:Src/control.c ****   
 142:Src/control.c ****   //  Roll_Out=PID_Control(&Roll_PID,Roll_Stable,Roll);
 143:Src/control.c **** 
 144:Src/control.c ****   // 前倾 角度为正  角速度为负
 145:Src/control.c ****   // 左倾 角度为负 角速度为负    最终输出 左+右-，所以ROLL_Angle_PID 为正
 146:Src/control.c ****   Pitch_Out=PID_Control(&Pitch_PID,Pitch_Stable,Pitch);
 147:Src/control.c ****   Roll_Out=PID_Control(&Roll_PID,Roll_Stable,Roll);
 148:Src/control.c **** 
 149:Src/control.c ****   Pitch_Angle_Speed_Out=PID_Control(&Pitch_Angle_Speed_PID,Pitch_Out,angle_speed[0]);
 150:Src/control.c ****   Roll_Angle_Speed_Out=PID_Control(&Roll_Angle_Speed_PID,Roll_Out,angle_speed[1]);
 151:Src/control.c **** 
 152:Src/control.c ****   Theta_Angle_Speed_Out=PID_Control(&Theta_Angle_Speed_PID,Pitch_Out,angle_speed[0]);
 153:Src/control.c **** 
 154:Src/control.c ****   Pitch_Angle_Speed_Out=fabs(Pitch_Angle_Speed_Out);
 155:Src/control.c **** 
 156:Src/control.c ****   base_duty=Thrust_Value/128.0f*50.0f;
 157:Src/control.c ****   if(base_duty<0){
 158:Src/control.c ****     base_duty=0;
 159:Src/control.c ****   }
 160:Src/control.c ****   
 161:Src/control.c ****   if (Aircraft_Mode==Mode_Arm){
 162:Src/control.c ****     Set_Servor(L_Servor,Theta_Angle_Speed_Out);
 163:Src/control.c ****     Set_Servor(R_Servor,Theta_Angle_Speed_Out);
 164:Src/control.c ****     Set_ESC(L_ESC,Pitch_Angle_Speed_Out+Roll_Angle_Speed_Out+base_duty);
 165:Src/control.c ****     Set_ESC(R_ESC,Pitch_Angle_Speed_Out-Roll_Angle_Speed_Out+base_duty);
 166:Src/control.c ****   }else if (Aircraft_Mode==Mode_Takeoff){
 167:Src/control.c ****     Set_ESC(L_ESC, Transform_N_to_Duty(result[0]));
 168:Src/control.c ****     Set_ESC(R_ESC,Transform_N_to_Duty(result[1]));
 169:Src/control.c ****     Set_Servor(L_Servor,Transform_Rad_to_Dgree(result[2]));
 170:Src/control.c ****     Set_Servor(R_Servor,Transform_Rad_to_Dgree(result[3]));
 171:Src/control.c ****   }else if(Aircraft_Mode==Mode_Stop){
 172:Src/control.c ****     Set_Servor(L_Servor,0);
 173:Src/control.c ****     Set_Servor(R_Servor,0);
 174:Src/control.c ****     Set_ESC(L_ESC,0);
 175:Src/control.c ****     Set_ESC(R_ESC,0); 
 176:Src/control.c ****   }
 177:Src/control.c ****   
 178:Src/control.c ****   loop_cnt++;
 179:Src/control.c ****   if(loop_cnt>10){
 180:Src/control.c ****     BAT_Voltage=Get_Voltage(5100,2200);
 181:Src/control.c ****     if(BAT_Voltage<7400){
 182:Src/control.c ****        HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 183:Src/control.c ****     }
 184:Src/control.c ****     loop_cnt=0;
 185:Src/control.c ****   }
 186:Src/control.c ****   send_wave(angle[0],angle[1],angle_speed[0],angle_speed[1]);
 187:Src/control.c **** 
 188:Src/control.c ****   MS_5_Flag=0;
 189:Src/control.c **** }
 598              		.loc 1 189 1 view .LVU118
 599 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 600              	.LVL66:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 15


 601              	.L54:
 135:Src/control.c ****   Gyroraw_to_Angle_Speed(&MPU9250,gy,angle_speed);
 602              		.loc 1 135 3 is_stmt 1 view .LVU119
 603 000a 664F     		ldr	r7, .L61+4
 604 000c 664E     		ldr	r6, .L61+8
 605 000e 674D     		ldr	r5, .L61+12
 606 0010 3A46     		mov	r2, r7
 607 0012 3146     		mov	r1, r6
 608 0014 2846     		mov	r0, r5
 609 0016 FFF7FEFF 		bl	MPU_Read6500
 610              	.LVL67:
 136:Src/control.c ****   get_angle(ac,angle_speed,angle,ac_angle);
 611              		.loc 1 136 3 view .LVU120
 612 001a 654C     		ldr	r4, .L61+16
 613 001c 2246     		mov	r2, r4
 614 001e 3946     		mov	r1, r7
 615 0020 2846     		mov	r0, r5
 616 0022 FFF7FEFF 		bl	Gyroraw_to_Angle_Speed
 617              	.LVL68:
 137:Src/control.c ****   
 618              		.loc 1 137 3 view .LVU121
 619 0026 634D     		ldr	r5, .L61+20
 620 0028 634B     		ldr	r3, .L61+24
 621 002a 2A46     		mov	r2, r5
 622 002c 2146     		mov	r1, r4
 623 002e 3046     		mov	r0, r6
 624 0030 FFF7FEFF 		bl	get_angle
 625              	.LVL69:
 139:Src/control.c ****   Roll=angle[0];
 626              		.loc 1 139 3 view .LVU122
 139:Src/control.c ****   Roll=angle[0];
 627              		.loc 1 139 14 is_stmt 0 view .LVU123
 628 0034 6A68     		ldr	r2, [r5, #4]	@ float
 139:Src/control.c ****   Roll=angle[0];
 629              		.loc 1 139 8 view .LVU124
 630 0036 614B     		ldr	r3, .L61+28
 631 0038 1A60     		str	r2, [r3]	@ float
 140:Src/control.c ****   
 632              		.loc 1 140 3 is_stmt 1 view .LVU125
 140:Src/control.c ****   
 633              		.loc 1 140 13 is_stmt 0 view .LVU126
 634 003a 2B68     		ldr	r3, [r5]	@ float
 140:Src/control.c ****   
 635              		.loc 1 140 7 view .LVU127
 636 003c 604E     		ldr	r6, .L61+32
 637 003e 3360     		str	r3, [r6]	@ float
 146:Src/control.c ****   Roll_Out=PID_Control(&Roll_PID,Roll_Stable,Roll);
 638              		.loc 1 146 3 is_stmt 1 view .LVU128
 146:Src/control.c ****   Roll_Out=PID_Control(&Roll_PID,Roll_Stable,Roll);
 639              		.loc 1 146 13 is_stmt 0 view .LVU129
 640 0040 604B     		ldr	r3, .L61+36
 641 0042 1968     		ldr	r1, [r3]	@ float
 642 0044 6048     		ldr	r0, .L61+40
 643 0046 FFF7FEFF 		bl	PID_Control
 644              	.LVL70:
 645 004a 0546     		mov	r5, r0
 646              	.LVL71:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 16


 147:Src/control.c **** 
 647              		.loc 1 147 3 is_stmt 1 view .LVU130
 147:Src/control.c **** 
 648              		.loc 1 147 12 is_stmt 0 view .LVU131
 649 004c 3268     		ldr	r2, [r6]	@ float
 650 004e 5F4B     		ldr	r3, .L61+44
 651 0050 1968     		ldr	r1, [r3]	@ float
 652 0052 5F48     		ldr	r0, .L61+48
 653              	.LVL72:
 147:Src/control.c **** 
 654              		.loc 1 147 12 view .LVU132
 655 0054 FFF7FEFF 		bl	PID_Control
 656              	.LVL73:
 657 0058 0746     		mov	r7, r0
 658              	.LVL74:
 149:Src/control.c ****   Roll_Angle_Speed_Out=PID_Control(&Roll_Angle_Speed_PID,Roll_Out,angle_speed[1]);
 659              		.loc 1 149 3 is_stmt 1 view .LVU133
 149:Src/control.c ****   Roll_Angle_Speed_Out=PID_Control(&Roll_Angle_Speed_PID,Roll_Out,angle_speed[1]);
 660              		.loc 1 149 25 is_stmt 0 view .LVU134
 661 005a 2268     		ldr	r2, [r4]	@ float
 662 005c 2946     		mov	r1, r5
 663 005e 5D48     		ldr	r0, .L61+52
 664              	.LVL75:
 149:Src/control.c ****   Roll_Angle_Speed_Out=PID_Control(&Roll_Angle_Speed_PID,Roll_Out,angle_speed[1]);
 665              		.loc 1 149 25 view .LVU135
 666 0060 FFF7FEFF 		bl	PID_Control
 667              	.LVL76:
 668 0064 0646     		mov	r6, r0
 669              	.LVL77:
 150:Src/control.c **** 
 670              		.loc 1 150 3 is_stmt 1 view .LVU136
 150:Src/control.c **** 
 671              		.loc 1 150 24 is_stmt 0 view .LVU137
 672 0066 6268     		ldr	r2, [r4, #4]	@ float
 673 0068 3946     		mov	r1, r7
 674 006a 5B48     		ldr	r0, .L61+56
 675              	.LVL78:
 150:Src/control.c **** 
 676              		.loc 1 150 24 view .LVU138
 677 006c FFF7FEFF 		bl	PID_Control
 678              	.LVL79:
 679 0070 0746     		mov	r7, r0
 680              	.LVL80:
 152:Src/control.c **** 
 681              		.loc 1 152 3 is_stmt 1 view .LVU139
 152:Src/control.c **** 
 682              		.loc 1 152 25 is_stmt 0 view .LVU140
 683 0072 2268     		ldr	r2, [r4]	@ float
 684 0074 2946     		mov	r1, r5
 685 0076 5948     		ldr	r0, .L61+60
 686              	.LVL81:
 152:Src/control.c **** 
 687              		.loc 1 152 25 view .LVU141
 688 0078 FFF7FEFF 		bl	PID_Control
 689              	.LVL82:
 690 007c 0546     		mov	r5, r0
 691              	.LVL83:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 17


 154:Src/control.c **** 
 692              		.loc 1 154 3 is_stmt 1 view .LVU142
 154:Src/control.c **** 
 693              		.loc 1 154 24 is_stmt 0 view .LVU143
 694 007e 26F00046 		bic	r6, r6, #-2147483648
 695              	.LVL84:
 156:Src/control.c ****   if(base_duty<0){
 696              		.loc 1 156 3 is_stmt 1 view .LVU144
 156:Src/control.c ****   if(base_duty<0){
 697              		.loc 1 156 25 is_stmt 0 view .LVU145
 698 0082 574B     		ldr	r3, .L61+64
 699 0084 B3F90000 		ldrsh	r0, [r3]
 700              	.LVL85:
 156:Src/control.c ****   if(base_duty<0){
 701              		.loc 1 156 25 view .LVU146
 702 0088 FFF7FEFF 		bl	__aeabi_i2f
 703              	.LVL86:
 704 008c 4FF07051 		mov	r1, #1006632960
 705 0090 FFF7FEFF 		bl	__aeabi_fmul
 706              	.LVL87:
 156:Src/control.c ****   if(base_duty<0){
 707              		.loc 1 156 12 view .LVU147
 708 0094 5349     		ldr	r1, .L61+68
 709 0096 FFF7FEFF 		bl	__aeabi_fmul
 710              	.LVL88:
 711 009a 0446     		mov	r4, r0
 712              	.LVL89:
 157:Src/control.c ****     base_duty=0;
 713              		.loc 1 157 3 is_stmt 1 view .LVU148
 157:Src/control.c ****     base_duty=0;
 714              		.loc 1 157 5 is_stmt 0 view .LVU149
 715 009c 0021     		movs	r1, #0
 716 009e FFF7FEFF 		bl	__aeabi_fcmplt
 717              	.LVL90:
 157:Src/control.c ****     base_duty=0;
 718              		.loc 1 157 5 view .LVU150
 719 00a2 C8B9     		cbnz	r0, .L55
 720              	.LVL91:
 721              	.L44:
 161:Src/control.c ****     Set_Servor(L_Servor,Theta_Angle_Speed_Out);
 722              		.loc 1 161 3 is_stmt 1 view .LVU151
 161:Src/control.c ****     Set_Servor(L_Servor,Theta_Angle_Speed_Out);
 723              		.loc 1 161 20 is_stmt 0 view .LVU152
 724 00a4 504B     		ldr	r3, .L61+72
 725 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 161:Src/control.c ****     Set_Servor(L_Servor,Theta_Angle_Speed_Out);
 726              		.loc 1 161 6 view .LVU153
 727 00a8 012B     		cmp	r3, #1
 728 00aa 17D0     		beq	.L56
 166:Src/control.c ****     Set_ESC(L_ESC, Transform_N_to_Duty(result[0]));
 729              		.loc 1 166 9 is_stmt 1 view .LVU154
 166:Src/control.c ****     Set_ESC(L_ESC, Transform_N_to_Duty(result[0]));
 730              		.loc 1 166 12 is_stmt 0 view .LVU155
 731 00ac 022B     		cmp	r3, #2
 732 00ae 34D0     		beq	.L57
 171:Src/control.c ****     Set_Servor(L_Servor,0);
 733              		.loc 1 171 9 is_stmt 1 view .LVU156
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 18


 171:Src/control.c ****     Set_Servor(L_Servor,0);
 734              		.loc 1 171 11 is_stmt 0 view .LVU157
 735 00b0 032B     		cmp	r3, #3
 736 00b2 4CD0     		beq	.L58
 737              	.LVL92:
 738              	.L46:
 178:Src/control.c ****   if(loop_cnt>10){
 739              		.loc 1 178 3 is_stmt 1 view .LVU158
 178:Src/control.c ****   if(loop_cnt>10){
 740              		.loc 1 178 11 is_stmt 0 view .LVU159
 741 00b4 4D4A     		ldr	r2, .L61+76
 742 00b6 1368     		ldr	r3, [r2]
 743 00b8 0133     		adds	r3, r3, #1
 744 00ba 1360     		str	r3, [r2]
 179:Src/control.c ****     BAT_Voltage=Get_Voltage(5100,2200);
 745              		.loc 1 179 3 is_stmt 1 view .LVU160
 179:Src/control.c ****     BAT_Voltage=Get_Voltage(5100,2200);
 746              		.loc 1 179 5 is_stmt 0 view .LVU161
 747 00bc 0A2B     		cmp	r3, #10
 748 00be 58DC     		bgt	.L59
 749              	.L48:
 186:Src/control.c **** 
 750              		.loc 1 186 3 is_stmt 1 view .LVU162
 751 00c0 3B4A     		ldr	r2, .L61+16
 752 00c2 3C48     		ldr	r0, .L61+20
 753 00c4 5368     		ldr	r3, [r2, #4]	@ float
 754 00c6 1268     		ldr	r2, [r2]	@ float
 755 00c8 4168     		ldr	r1, [r0, #4]	@ float
 756 00ca 0068     		ldr	r0, [r0]	@ float
 757 00cc FFF7FEFF 		bl	send_wave
 758              	.LVL93:
 188:Src/control.c **** }
 759              		.loc 1 188 3 view .LVU163
 188:Src/control.c **** }
 760              		.loc 1 188 12 is_stmt 0 view .LVU164
 761 00d0 334B     		ldr	r3, .L61
 762 00d2 0022     		movs	r2, #0
 763 00d4 1A70     		strb	r2, [r3]
 764 00d6 97E7     		b	.L42
 765              	.LVL94:
 766              	.L55:
 158:Src/control.c ****   }
 767              		.loc 1 158 14 view .LVU165
 768 00d8 0024     		movs	r4, #0
 769              	.LVL95:
 158:Src/control.c ****   }
 770              		.loc 1 158 14 view .LVU166
 771 00da E3E7     		b	.L44
 772              	.LVL96:
 773              	.L56:
 162:Src/control.c ****     Set_Servor(R_Servor,Theta_Angle_Speed_Out);
 774              		.loc 1 162 5 is_stmt 1 view .LVU167
 775 00dc 2946     		mov	r1, r5
 776 00de 0020     		movs	r0, #0
 777 00e0 FFF7FEFF 		bl	Set_Servor
 778              	.LVL97:
 163:Src/control.c ****     Set_ESC(L_ESC,Pitch_Angle_Speed_Out+Roll_Angle_Speed_Out+base_duty);
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 19


 779              		.loc 1 163 5 view .LVU168
 780 00e4 2946     		mov	r1, r5
 781 00e6 0120     		movs	r0, #1
 782 00e8 FFF7FEFF 		bl	Set_Servor
 783              	.LVL98:
 164:Src/control.c ****     Set_ESC(R_ESC,Pitch_Angle_Speed_Out-Roll_Angle_Speed_Out+base_duty);
 784              		.loc 1 164 5 view .LVU169
 164:Src/control.c ****     Set_ESC(R_ESC,Pitch_Angle_Speed_Out-Roll_Angle_Speed_Out+base_duty);
 785              		.loc 1 164 40 is_stmt 0 view .LVU170
 786 00ec 3146     		mov	r1, r6
 787 00ee 3846     		mov	r0, r7
 788 00f0 FFF7FEFF 		bl	__aeabi_fadd
 789              	.LVL99:
 164:Src/control.c ****     Set_ESC(R_ESC,Pitch_Angle_Speed_Out-Roll_Angle_Speed_Out+base_duty);
 790              		.loc 1 164 5 view .LVU171
 791 00f4 2146     		mov	r1, r4
 792 00f6 FFF7FEFF 		bl	__aeabi_fadd
 793              	.LVL100:
 794 00fa 0146     		mov	r1, r0
 795 00fc 0020     		movs	r0, #0
 796 00fe FFF7FEFF 		bl	Set_ESC
 797              	.LVL101:
 165:Src/control.c ****   }else if (Aircraft_Mode==Mode_Takeoff){
 798              		.loc 1 165 5 is_stmt 1 view .LVU172
 165:Src/control.c ****   }else if (Aircraft_Mode==Mode_Takeoff){
 799              		.loc 1 165 40 is_stmt 0 view .LVU173
 800 0102 3946     		mov	r1, r7
 801 0104 3046     		mov	r0, r6
 802 0106 FFF7FEFF 		bl	__aeabi_fsub
 803              	.LVL102:
 165:Src/control.c ****   }else if (Aircraft_Mode==Mode_Takeoff){
 804              		.loc 1 165 5 view .LVU174
 805 010a 2146     		mov	r1, r4
 806 010c FFF7FEFF 		bl	__aeabi_fadd
 807              	.LVL103:
 808 0110 0146     		mov	r1, r0
 809 0112 0120     		movs	r0, #1
 810 0114 FFF7FEFF 		bl	Set_ESC
 811              	.LVL104:
 812 0118 CCE7     		b	.L46
 813              	.L57:
 167:Src/control.c ****     Set_ESC(R_ESC,Transform_N_to_Duty(result[1]));
 814              		.loc 1 167 5 is_stmt 1 view .LVU175
 815 011a 0025     		movs	r5, #0
 816              	.LVL105:
 167:Src/control.c ****     Set_ESC(R_ESC,Transform_N_to_Duty(result[1]));
 817              		.loc 1 167 5 is_stmt 0 view .LVU176
 818 011c 2846     		mov	r0, r5
 819 011e FFF7FEFF 		bl	Transform_N_to_Duty
 820              	.LVL106:
 821 0122 0446     		mov	r4, r0
 822              	.LVL107:
 167:Src/control.c ****     Set_ESC(R_ESC,Transform_N_to_Duty(result[1]));
 823              		.loc 1 167 5 view .LVU177
 824 0124 0146     		mov	r1, r0
 825 0126 0020     		movs	r0, #0
 826 0128 FFF7FEFF 		bl	Set_ESC
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 20


 827              	.LVL108:
 168:Src/control.c ****     Set_Servor(L_Servor,Transform_Rad_to_Dgree(result[2]));
 828              		.loc 1 168 5 is_stmt 1 view .LVU178
 829 012c 2146     		mov	r1, r4
 830 012e 0120     		movs	r0, #1
 831 0130 FFF7FEFF 		bl	Set_ESC
 832              	.LVL109:
 169:Src/control.c ****     Set_Servor(R_Servor,Transform_Rad_to_Dgree(result[3]));
 833              		.loc 1 169 5 view .LVU179
 834 0134 2846     		mov	r0, r5
 835 0136 FFF7FEFF 		bl	Transform_Rad_to_Dgree
 836              	.LVL110:
 837 013a 0446     		mov	r4, r0
 838 013c 0146     		mov	r1, r0
 839 013e 0020     		movs	r0, #0
 840 0140 FFF7FEFF 		bl	Set_Servor
 841              	.LVL111:
 170:Src/control.c ****   }else if(Aircraft_Mode==Mode_Stop){
 842              		.loc 1 170 5 view .LVU180
 843 0144 2146     		mov	r1, r4
 844 0146 0120     		movs	r0, #1
 845 0148 FFF7FEFF 		bl	Set_Servor
 846              	.LVL112:
 847 014c B2E7     		b	.L46
 848              	.LVL113:
 849              	.L58:
 172:Src/control.c ****     Set_Servor(R_Servor,0);
 850              		.loc 1 172 5 view .LVU181
 851 014e 0024     		movs	r4, #0
 852              	.LVL114:
 172:Src/control.c ****     Set_Servor(R_Servor,0);
 853              		.loc 1 172 5 is_stmt 0 view .LVU182
 854 0150 2146     		mov	r1, r4
 855 0152 0020     		movs	r0, #0
 856 0154 FFF7FEFF 		bl	Set_Servor
 857              	.LVL115:
 173:Src/control.c ****     Set_ESC(L_ESC,0);
 858              		.loc 1 173 5 is_stmt 1 view .LVU183
 859 0158 2146     		mov	r1, r4
 860 015a 0120     		movs	r0, #1
 861 015c FFF7FEFF 		bl	Set_Servor
 862              	.LVL116:
 174:Src/control.c ****     Set_ESC(R_ESC,0); 
 863              		.loc 1 174 5 view .LVU184
 864 0160 2146     		mov	r1, r4
 865 0162 0020     		movs	r0, #0
 866 0164 FFF7FEFF 		bl	Set_ESC
 867              	.LVL117:
 175:Src/control.c ****   }
 868              		.loc 1 175 5 view .LVU185
 869 0168 2146     		mov	r1, r4
 870 016a 0120     		movs	r0, #1
 871 016c FFF7FEFF 		bl	Set_ESC
 872              	.LVL118:
 873 0170 A0E7     		b	.L46
 874              	.LVL119:
 875              	.L59:
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 21


 180:Src/control.c ****     if(BAT_Voltage<7400){
 876              		.loc 1 180 5 view .LVU186
 180:Src/control.c ****     if(BAT_Voltage<7400){
 877              		.loc 1 180 17 is_stmt 0 view .LVU187
 878 0172 40F69801 		movw	r1, #2200
 879 0176 41F2EC30 		movw	r0, #5100
 880 017a FFF7FEFF 		bl	Get_Voltage
 881              	.LVL120:
 180:Src/control.c ****     if(BAT_Voltage<7400){
 882              		.loc 1 180 16 view .LVU188
 883 017e 1C4B     		ldr	r3, .L61+80
 884 0180 1860     		str	r0, [r3]	@ float
 181:Src/control.c ****        HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 885              		.loc 1 181 5 is_stmt 1 view .LVU189
 181:Src/control.c ****        HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 886              		.loc 1 181 7 is_stmt 0 view .LVU190
 887 0182 1C49     		ldr	r1, .L61+84
 888 0184 FFF7FEFF 		bl	__aeabi_fcmplt
 889              	.LVL121:
 890 0188 18B9     		cbnz	r0, .L60
 891              	.L49:
 184:Src/control.c ****   }
 892              		.loc 1 184 5 is_stmt 1 view .LVU191
 184:Src/control.c ****   }
 893              		.loc 1 184 13 is_stmt 0 view .LVU192
 894 018a 184B     		ldr	r3, .L61+76
 895 018c 0022     		movs	r2, #0
 896 018e 1A60     		str	r2, [r3]
 897 0190 96E7     		b	.L48
 898              	.L60:
 182:Src/control.c ****     }
 899              		.loc 1 182 8 is_stmt 1 view .LVU193
 900 0192 0122     		movs	r2, #1
 901 0194 0821     		movs	r1, #8
 902 0196 1848     		ldr	r0, .L61+88
 903 0198 FFF7FEFF 		bl	HAL_GPIO_WritePin
 904              	.LVL122:
 905 019c F5E7     		b	.L49
 906              	.L62:
 907 019e 00BF     		.align	2
 908              	.L61:
 909 01a0 00000000 		.word	.LANCHOR3
 910 01a4 00000000 		.word	.LANCHOR4
 911 01a8 00000000 		.word	.LANCHOR5
 912 01ac 00000000 		.word	MPU9250
 913 01b0 00000000 		.word	.LANCHOR6
 914 01b4 00000000 		.word	.LANCHOR8
 915 01b8 00000000 		.word	.LANCHOR7
 916 01bc 00000000 		.word	Pitch
 917 01c0 00000000 		.word	Roll
 918 01c4 00000000 		.word	.LANCHOR9
 919 01c8 00000000 		.word	.LANCHOR10
 920 01cc 00000000 		.word	.LANCHOR11
 921 01d0 00000000 		.word	.LANCHOR12
 922 01d4 00000000 		.word	.LANCHOR13
 923 01d8 00000000 		.word	.LANCHOR14
 924 01dc 00000000 		.word	.LANCHOR15
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 22


 925 01e0 00000000 		.word	Thrust_Value
 926 01e4 00004842 		.word	1112014848
 927 01e8 00000000 		.word	.LANCHOR16
 928 01ec 00000000 		.word	.LANCHOR17
 929 01f0 00000000 		.word	.LANCHOR18
 930 01f4 0040E745 		.word	1172783104
 931 01f8 000C0140 		.word	1073810432
 932              		.cfi_endproc
 933              	.LFE75:
 935              		.section	.text.Control_Caculate,"ax",%progbits
 936              		.align	1
 937              		.global	Control_Caculate
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 941              		.fpu softvfp
 943              	Control_Caculate:
 944              	.LVL123:
 945              	.LFB76:
 190:Src/control.c **** 
 191:Src/control.c **** void Control_Caculate(float Fz,float Mx,float My,float Mz,float *result){
 946              		.loc 1 191 73 view -0
 947              		.cfi_startproc
 948              		@ args = 4, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 192:Src/control.c ****   ;
 951              		.loc 1 192 3 view .LVU195
 193:Src/control.c **** }
 952              		.loc 1 193 1 is_stmt 0 view .LVU196
 953 0000 7047     		bx	lr
 954              		.cfi_endproc
 955              	.LFE76:
 957              		.section	.text.NRF_Receive_Callback,"ax",%progbits
 958              		.align	1
 959              		.global	NRF_Receive_Callback
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu softvfp
 965              	NRF_Receive_Callback:
 966              	.LVL124:
 967              	.LFB77:
 194:Src/control.c **** 
 195:Src/control.c **** 
 196:Src/control.c **** 
 197:Src/control.c **** void NRF_Receive_Callback(uint8_t * data,int len){
 968              		.loc 1 197 50 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 198:Src/control.c ****   
 199:Src/control.c ****   uint16_t state=0;
 973              		.loc 1 199 3 view .LVU198
 200:Src/control.c ****   if(len==10){
 974              		.loc 1 200 3 view .LVU199
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 23


 975              		.loc 1 200 5 is_stmt 0 view .LVU200
 976 0000 0A29     		cmp	r1, #10
 977 0002 00D0     		beq	.L67
 978              	.LVL125:
 979              	.L64:
 201:Src/control.c ****    memcpy(&state,data+8,2);
 202:Src/control.c ****    memcpy(&Thrust_Value,data+4,2);
 203:Src/control.c ****    state&=0x3FFF;
 204:Src/control.c ****    if(state==1){
 205:Src/control.c ****      Aircraft_Mode=Mode_Arm;
 206:Src/control.c ****    }else if(state==8){
 207:Src/control.c ****      Aircraft_Mode=Mode_Stop;
 208:Src/control.c ****    }
 209:Src/control.c ****   }
 210:Src/control.c **** }
 980              		.loc 1 210 1 view .LVU201
 981 0004 7047     		bx	lr
 982              	.LVL126:
 983              	.L67:
 201:Src/control.c ****    memcpy(&state,data+8,2);
 984              		.loc 1 201 4 is_stmt 1 view .LVU202
 985 0006 0389     		ldrh	r3, [r0, #8]	@ unaligned
 986              	.LVL127:
 202:Src/control.c ****    state&=0x3FFF;
 987              		.loc 1 202 4 view .LVU203
 988 0008 8188     		ldrh	r1, [r0, #4]	@ unaligned
 989              	.LVL128:
 202:Src/control.c ****    state&=0x3FFF;
 990              		.loc 1 202 4 is_stmt 0 view .LVU204
 991 000a 084A     		ldr	r2, .L69
 992 000c 1180     		strh	r1, [r2]	@ movhi
 203:Src/control.c ****    if(state==1){
 993              		.loc 1 203 4 is_stmt 1 view .LVU205
 203:Src/control.c ****    if(state==1){
 994              		.loc 1 203 9 is_stmt 0 view .LVU206
 995 000e C3F30D03 		ubfx	r3, r3, #0, #14
 996              	.LVL129:
 204:Src/control.c ****      Aircraft_Mode=Mode_Arm;
 997              		.loc 1 204 4 is_stmt 1 view .LVU207
 204:Src/control.c ****      Aircraft_Mode=Mode_Arm;
 998              		.loc 1 204 6 is_stmt 0 view .LVU208
 999 0012 012B     		cmp	r3, #1
 1000 0014 05D0     		beq	.L68
 206:Src/control.c ****      Aircraft_Mode=Mode_Stop;
 1001              		.loc 1 206 10 is_stmt 1 view .LVU209
 206:Src/control.c ****      Aircraft_Mode=Mode_Stop;
 1002              		.loc 1 206 12 is_stmt 0 view .LVU210
 1003 0016 082B     		cmp	r3, #8
 1004 0018 F4D1     		bne	.L64
 207:Src/control.c ****    }
 1005              		.loc 1 207 6 is_stmt 1 view .LVU211
 207:Src/control.c ****    }
 1006              		.loc 1 207 19 is_stmt 0 view .LVU212
 1007 001a 054B     		ldr	r3, .L69+4
 1008              	.LVL130:
 207:Src/control.c ****    }
 1009              		.loc 1 207 19 view .LVU213
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 24


 1010 001c 0322     		movs	r2, #3
 1011 001e 1A70     		strb	r2, [r3]
 1012              	.LVL131:
 1013              		.loc 1 210 1 view .LVU214
 1014 0020 F0E7     		b	.L64
 1015              	.LVL132:
 1016              	.L68:
 205:Src/control.c ****    }else if(state==8){
 1017              		.loc 1 205 6 is_stmt 1 view .LVU215
 205:Src/control.c ****    }else if(state==8){
 1018              		.loc 1 205 19 is_stmt 0 view .LVU216
 1019 0022 034B     		ldr	r3, .L69+4
 1020              	.LVL133:
 205:Src/control.c ****    }else if(state==8){
 1021              		.loc 1 205 19 view .LVU217
 1022 0024 0122     		movs	r2, #1
 1023 0026 1A70     		strb	r2, [r3]
 1024 0028 7047     		bx	lr
 1025              	.L70:
 1026 002a 00BF     		.align	2
 1027              	.L69:
 1028 002c 00000000 		.word	Thrust_Value
 1029 0030 00000000 		.word	.LANCHOR16
 1030              		.cfi_endproc
 1031              	.LFE77:
 1033              		.section	.text.Ms_IRQ_Handler,"ax",%progbits
 1034              		.align	1
 1035              		.global	Ms_IRQ_Handler
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu softvfp
 1041              	Ms_IRQ_Handler:
 1042              	.LFB78:
 211:Src/control.c **** 
 212:Src/control.c **** extern uint8_t Init_OK;
 213:Src/control.c **** void Ms_IRQ_Handler(){
 1043              		.loc 1 213 22 is_stmt 1 view -0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 214:Src/control.c ****   static int Ms_Cnt=0;
 1048              		.loc 1 214 3 view .LVU219
 215:Src/control.c ****   if(!Init_OK){
 1049              		.loc 1 215 3 view .LVU220
 1050              		.loc 1 215 6 is_stmt 0 view .LVU221
 1051 0000 094B     		ldr	r3, .L75
 1052 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1053              		.loc 1 215 5 view .LVU222
 1054 0004 3BB1     		cbz	r3, .L71
 216:Src/control.c ****     return ;
 217:Src/control.c ****   }
 218:Src/control.c ****   if(Ms_Cnt==5){
 1055              		.loc 1 218 3 is_stmt 1 view .LVU223
 1056              		.loc 1 218 12 is_stmt 0 view .LVU224
 1057 0006 094B     		ldr	r3, .L75+4
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 25


 1058 0008 1B68     		ldr	r3, [r3]
 1059              		.loc 1 218 5 view .LVU225
 1060 000a 052B     		cmp	r3, #5
 1061 000c 04D0     		beq	.L74
 1062              	.L73:
 219:Src/control.c ****     MS_5_Flag=1;
 220:Src/control.c ****     Ms_Cnt=0;
 221:Src/control.c ****   }
 222:Src/control.c **** 
 223:Src/control.c ****   Ms_Cnt++;
 1063              		.loc 1 223 3 is_stmt 1 view .LVU226
 1064              		.loc 1 223 9 is_stmt 0 view .LVU227
 1065 000e 074A     		ldr	r2, .L75+4
 1066 0010 1368     		ldr	r3, [r2]
 1067 0012 0133     		adds	r3, r3, #1
 1068 0014 1360     		str	r3, [r2]
 1069              	.L71:
 224:Src/control.c **** }...
 1070              		.loc 1 224 1 view .LVU228
 1071 0016 7047     		bx	lr
 1072              	.L74:
 219:Src/control.c ****     MS_5_Flag=1;
 1073              		.loc 1 219 5 is_stmt 1 view .LVU229
 219:Src/control.c ****     MS_5_Flag=1;
 1074              		.loc 1 219 14 is_stmt 0 view .LVU230
 1075 0018 054B     		ldr	r3, .L75+8
 1076 001a 0122     		movs	r2, #1
 1077 001c 1A70     		strb	r2, [r3]
 220:Src/control.c ****     Ms_Cnt=0;
 1078              		.loc 1 220 5 is_stmt 1 view .LVU231
 220:Src/control.c ****     Ms_Cnt=0;
 1079              		.loc 1 220 11 is_stmt 0 view .LVU232
 1080 001e 034B     		ldr	r3, .L75+4
 1081 0020 0022     		movs	r2, #0
 1082 0022 1A60     		str	r2, [r3]
 1083 0024 F3E7     		b	.L73
 1084              	.L76:
 1085 0026 00BF     		.align	2
 1086              	.L75:
 1087 0028 00000000 		.word	Init_OK
 1088 002c 00000000 		.word	.LANCHOR19
 1089 0030 00000000 		.word	.LANCHOR3
 1090              		.cfi_endproc
 1091              	.LFE78:
 1093              		.global	BAT_Voltage
 1094              		.global	MS_5_Flag
 1095              		.global	Aircraft_Mode
 1096              		.global	Theta_Angle_Speed_PID
 1097              		.global	Roll_Angle_Speed_PID
 1098              		.global	Pitch_Angle_Speed_PID
 1099              		.global	Theta_PID
 1100              		.global	Pitch_PID
 1101              		.global	Roll_PID
 1102              		.comm	Roll,4,4
 1103              		.comm	Pitch,4,4
 1104              		.comm	Thrust_Value,2,2
 1105              		.global	Servor_Width_Limit
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 26


 1106              		.global	R_Servor_Middle
 1107              		.global	L_Servor_Middle
 1108              		.global	Roll_Stable
 1109              		.global	Pitch_Stable
 1110              		.section	.bss.Aircraft_Mode,"aw",%nobits
 1111              		.set	.LANCHOR16,. + 0
 1114              	Aircraft_Mode:
 1115 0000 00       		.space	1
 1116              		.section	.bss.BAT_Voltage,"aw",%nobits
 1117              		.align	2
 1118              		.set	.LANCHOR18,. + 0
 1121              	BAT_Voltage:
 1122 0000 00000000 		.space	4
 1123              		.section	.bss.MS_5_Flag,"aw",%nobits
 1124              		.set	.LANCHOR3,. + 0
 1127              	MS_5_Flag:
 1128 0000 00       		.space	1
 1129              		.section	.bss.Ms_Cnt.8928,"aw",%nobits
 1130              		.align	2
 1131              		.set	.LANCHOR19,. + 0
 1134              	Ms_Cnt.8928:
 1135 0000 00000000 		.space	4
 1136              		.section	.bss.Servor_Width_Limit,"aw",%nobits
 1137              		.align	2
 1138              		.set	.LANCHOR2,. + 0
 1141              	Servor_Width_Limit:
 1142 0000 00000000 		.space	4
 1143              		.section	.bss.Theta_PID,"aw",%nobits
 1144              		.align	2
 1147              	Theta_PID:
 1148 0000 00000000 		.space	32
 1148      00000000 
 1148      00000000 
 1148      00000000 
 1148      00000000 
 1149              		.section	.bss.ac.8900,"aw",%nobits
 1150              		.align	2
 1151              		.set	.LANCHOR5,. + 0
 1154              	ac.8900:
 1155 0000 00000000 		.space	6
 1155      0000
 1156              		.section	.bss.ac_angle.8903,"aw",%nobits
 1157              		.align	2
 1158              		.set	.LANCHOR7,. + 0
 1161              	ac_angle.8903:
 1162 0000 00000000 		.space	12
 1162      00000000 
 1162      00000000 
 1163              		.section	.bss.angle.8904,"aw",%nobits
 1164              		.align	2
 1165              		.set	.LANCHOR8,. + 0
 1168              	angle.8904:
 1169 0000 00000000 		.space	12
 1169      00000000 
 1169      00000000 
 1170              		.section	.bss.angle_speed.8902,"aw",%nobits
 1171              		.align	2
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 27


 1172              		.set	.LANCHOR6,. + 0
 1175              	angle_speed.8902:
 1176 0000 00000000 		.space	12
 1176      00000000 
 1176      00000000 
 1177              		.section	.bss.gy.8901,"aw",%nobits
 1178              		.align	2
 1179              		.set	.LANCHOR4,. + 0
 1182              	gy.8901:
 1183 0000 00000000 		.space	6
 1183      0000
 1184              		.section	.bss.loop_cnt.8911,"aw",%nobits
 1185              		.align	2
 1186              		.set	.LANCHOR17,. + 0
 1189              	loop_cnt.8911:
 1190 0000 00000000 		.space	4
 1191              		.section	.data.L_Servor_Middle,"aw"
 1192              		.align	2
 1193              		.set	.LANCHOR0,. + 0
 1196              	L_Servor_Middle:
 1197 0000 78050000 		.word	1400
 1198              		.section	.data.Pitch_Angle_Speed_PID,"aw"
 1199              		.align	2
 1200              		.set	.LANCHOR13,. + 0
 1203              	Pitch_Angle_Speed_PID:
 1204 0000 0000003F 		.word	1056964608
 1205 0004 00000000 		.word	0
 1206 0008 00000000 		.word	0
 1207 000c 00000000 		.word	0
 1208 0010 00000000 		.word	0
 1209 0014 00000000 		.word	0
 1210 0018 00000000 		.word	0
 1211 001c 0AD7A33B 		.word	1000593162
 1212              		.section	.data.Pitch_PID,"aw"
 1213              		.align	2
 1214              		.set	.LANCHOR10,. + 0
 1217              	Pitch_PID:
 1218 0000 000000C0 		.word	-1073741824
 1219 0004 00000000 		.word	0
 1220 0008 6F1203BA 		.word	-1174203793
 1221 000c 00000000 		.word	0
 1222 0010 00000000 		.word	0
 1223 0014 00000000 		.word	0
 1224 0018 00000000 		.word	0
 1225 001c 0AD7A33B 		.word	1000593162
 1226              		.section	.data.Pitch_Stable,"aw"
 1227              		.align	2
 1228              		.set	.LANCHOR9,. + 0
 1231              	Pitch_Stable:
 1232 0000 0000B442 		.word	1119092736
 1233              		.section	.data.R_Servor_Middle,"aw"
 1234              		.align	2
 1235              		.set	.LANCHOR1,. + 0
 1238              	R_Servor_Middle:
 1239 0000 72060000 		.word	1650
 1240              		.section	.data.Roll_Angle_Speed_PID,"aw"
 1241              		.align	2
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 28


 1242              		.set	.LANCHOR14,. + 0
 1245              	Roll_Angle_Speed_PID:
 1246 0000 0000403F 		.word	1061158912
 1247 0004 00000000 		.word	0
 1248 0008 6F12833A 		.word	981668463
 1249 000c 00000000 		.word	0
 1250 0010 00000000 		.word	0
 1251 0014 00000000 		.word	0
 1252 0018 00000000 		.word	0
 1253 001c 0AD7A33B 		.word	1000593162
 1254              		.section	.data.Roll_PID,"aw"
 1255              		.align	2
 1256              		.set	.LANCHOR12,. + 0
 1259              	Roll_PID:
 1260 0000 0000C03F 		.word	1069547520
 1261 0004 00000000 		.word	0
 1262 0008 00000000 		.word	0
 1263 000c 00000000 		.word	0
 1264 0010 00000000 		.word	0
 1265 0014 00000000 		.word	0
 1266 0018 00000000 		.word	0
 1267 001c 0AD7A33B 		.word	1000593162
 1268              		.section	.data.Roll_Stable,"aw"
 1269              		.align	2
 1270              		.set	.LANCHOR11,. + 0
 1273              	Roll_Stable:
 1274 0000 0000B442 		.word	1119092736
 1275              		.section	.data.Theta_Angle_Speed_PID,"aw"
 1276              		.align	2
 1277              		.set	.LANCHOR15,. + 0
 1280              	Theta_Angle_Speed_PID:
 1281 0000 000080BF 		.word	-1082130432
 1282 0004 00000000 		.word	0
 1283 0008 0AD7A3BB 		.word	-1146890486
 1284 000c 00000000 		.word	0
 1285 0010 00000000 		.word	0
 1286 0014 00000000 		.word	0
 1287 0018 00000000 		.word	0
 1288 001c 0AD7A33B 		.word	1000593162
 1289              		.text
 1290              	.Letext0:
 1291              		.file 2 "Inc/control.h"
 1292              		.file 3 "c:\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1293              		.file 4 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 1294              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1295              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1296              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1297              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1298              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1299              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1300              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1301              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1302              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1303              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1304              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1305              		.file 16 "Inc/tim.h"
 1306              		.file 17 "Inc/i2c.h"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 29


 1307              		.file 18 "mylib/icm20600.h"
 1308              		.file 19 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 1309              		.file 20 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 1310              		.file 21 "c:\\arm_gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 1311              		.file 22 "c:\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 1312              		.file 23 "c:\\arm_gcc\\arm-none-eabi\\include\\stdlib.h"
 1313              		.file 24 "mylib/uart_ext.h"
 1314              		.file 25 "c:\\arm_gcc\\arm-none-eabi\\include\\math.h"
 1315              		.file 26 "mylib/pid.h"
 1316              		.file 27 "Inc/adc.h"
 1317              		.file 28 "mylib/easy_angle.h"
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 control.c
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:19     .text.Get_Voltage:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:27     .text.Get_Voltage:00000000 Get_Voltage
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:105    .text.Get_Voltage:00000054 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:111    .text.Servors_Init:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:118    .text.Servors_Init:00000000 Servors_Init
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:168    .text.Servors_Init:00000034 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:175    .text.ESC_Init:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:182    .text.ESC_Init:00000000 ESC_Init
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:220    .text.ESC_Init:00000024 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:229    .text.Set_Servor:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:236    .text.Set_Servor:00000000 Set_Servor
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:349    .text.Set_Servor:00000070 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:360    .text.Set_ESC:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:367    .text.Set_ESC:00000000 Set_ESC
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:473    .text.Set_ESC:0000006c $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:482    .text.Transform_N_to_Duty:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:489    .text.Transform_N_to_Duty:00000000 Transform_N_to_Duty
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:512    .text.Transform_N_to_Duty:0000000c $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:517    .text.Transform_Rad_to_Dgree:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:524    .text.Transform_Rad_to_Dgree:00000000 Transform_Rad_to_Dgree
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:551    .text.Transform_Rad_to_Dgree:00000010 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:558    .text.Control_Loop:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:565    .text.Control_Loop:00000000 Control_Loop
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:909    .text.Control_Loop:000001a0 $d
                            *COM*:00000004 Pitch
                            *COM*:00000004 Roll
                            *COM*:00000002 Thrust_Value
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:936    .text.Control_Caculate:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:943    .text.Control_Caculate:00000000 Control_Caculate
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:958    .text.NRF_Receive_Callback:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:965    .text.NRF_Receive_Callback:00000000 NRF_Receive_Callback
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1028   .text.NRF_Receive_Callback:0000002c $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1034   .text.Ms_IRQ_Handler:00000000 $t
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1041   .text.Ms_IRQ_Handler:00000000 Ms_IRQ_Handler
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1087   .text.Ms_IRQ_Handler:00000028 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1121   .bss.BAT_Voltage:00000000 BAT_Voltage
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1127   .bss.MS_5_Flag:00000000 MS_5_Flag
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1114   .bss.Aircraft_Mode:00000000 Aircraft_Mode
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1280   .data.Theta_Angle_Speed_PID:00000000 Theta_Angle_Speed_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1245   .data.Roll_Angle_Speed_PID:00000000 Roll_Angle_Speed_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1203   .data.Pitch_Angle_Speed_PID:00000000 Pitch_Angle_Speed_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1147   .bss.Theta_PID:00000000 Theta_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1217   .data.Pitch_PID:00000000 Pitch_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1259   .data.Roll_PID:00000000 Roll_PID
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1141   .bss.Servor_Width_Limit:00000000 Servor_Width_Limit
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1238   .data.R_Servor_Middle:00000000 R_Servor_Middle
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1196   .data.L_Servor_Middle:00000000 L_Servor_Middle
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1273   .data.Roll_Stable:00000000 Roll_Stable
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1231   .data.Pitch_Stable:00000000 Pitch_Stable
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1115   .bss.Aircraft_Mode:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1117   .bss.BAT_Voltage:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1128   .bss.MS_5_Flag:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1130   .bss.Ms_Cnt.8928:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1134   .bss.Ms_Cnt.8928:00000000 Ms_Cnt.8928
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1137   .bss.Servor_Width_Limit:00000000 $d
ARM GAS  C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s 			page 31


C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1144   .bss.Theta_PID:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1150   .bss.ac.8900:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1154   .bss.ac.8900:00000000 ac.8900
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1157   .bss.ac_angle.8903:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1161   .bss.ac_angle.8903:00000000 ac_angle.8903
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1164   .bss.angle.8904:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1168   .bss.angle.8904:00000000 angle.8904
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1171   .bss.angle_speed.8902:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1175   .bss.angle_speed.8902:00000000 angle_speed.8902
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1178   .bss.gy.8901:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1182   .bss.gy.8901:00000000 gy.8901
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1185   .bss.loop_cnt.8911:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1189   .bss.loop_cnt.8911:00000000 loop_cnt.8911
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1192   .data.L_Servor_Middle:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1199   .data.Pitch_Angle_Speed_PID:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1213   .data.Pitch_PID:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1227   .data.Pitch_Stable:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1234   .data.R_Servor_Middle:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1241   .data.Roll_Angle_Speed_PID:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1255   .data.Roll_PID:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1269   .data.Roll_Stable:00000000 $d
C:\Users\ncer\AppData\Local\Temp\ccdJi6pl.s:1276   .data.Theta_Angle_Speed_PID:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
__aeabi_fmul
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
Caculate_Cnt
htim3
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2iz
htim2
__aeabi_fadd
__aeabi_fsub
MPU_Read6500
Gyroraw_to_Angle_Speed
get_angle
PID_Control
send_wave
HAL_GPIO_WritePin
MPU9250
Init_OK
